on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository }}

jobs:
  build-java:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: corretto
          cache: maven
          cache-dependency-path: backend/pom.xml

      - name: Build application
        run: mvn verify package
        working-directory: ./backend

      - name: Rename artifact
        run: mv ./backend/target/*.jar ./backend/target/app.jar

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-app
          path: backend/target/*.jar

      - name: Upload dependency graph
        uses: advanced-security/maven-dependency-submission-action@v4
        with:
          directory: ./backend

  build-node:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build application
        run: npm run build
        working-directory: ./frontend

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-app
          path: frontend/.output

  build-java-image:
    needs: build-java

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    uses: ./.github/workflows/build-docker.yml
    with:
      package: backend

  build-node-image:
    needs: build-node

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    uses: ./.github/workflows/build-docker.yml
    with:
      package: frontend

  test-deploy:
    runs-on: ubuntu-latest

    needs:
      - build-java-image
      - build-node-image

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Kubernetes Cluster in Docker Environment
        uses: medyagh/setup-minikube@latest

      - name: Setup GitHub Container Registry in Minikube
        run: |
          kubectl create secret docker-registry ghcr \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ github.token }}

      - name: Deploy cluster
        run: |
          kubectl apply --wait -f k8s/namespace.yaml
          kubectl apply --wait --recursive -f k8s
